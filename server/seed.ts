import { db } from "./db";
import {
  dataModels,
  dataDomains,
  dataAreas,
  dataObjects,
  dataModelObjects,
  dataModelAttributes,
  dataModelProperties,
  dataObjectRelationships,
  dataModelObjectRelationships,
  attributes,
  systems,
  configurations,
  businessCapabilities,
  capabilityDataDomainMappings,
  capabilityDataAreaMappings,
  capabilitySystemMappings,
  capabilityDataModelMappings,
  capabilityModelSystemMappings,
  dataModelSystemMappings,
  modelLifecyclePhases,
  modelLifecycleAssignments,
} from "@shared/schema";
import type {
  InsertSystem,
  InsertDataDomain,
  InsertDataArea,
  InsertDataModel,
  InsertDataObject,
  InsertAttribute,
  InsertBusinessCapability,
  InsertCapabilityDataDomainMapping,
  InsertCapabilityDataAreaMapping,
  InsertCapabilitySystemMapping,
  InsertCapabilityDataModelMapping,
  InsertCapabilityModelSystemMapping,
  InsertDataModelSystemMapping,
  InsertModelLifecyclePhase,
  InsertModelLifecycleAssignment,
  System,
  DataDomain,
  DataArea,
  DataObject,
  DataModel,
  BusinessCapability,
  ModelLifecyclePhase,
} from "@shared/schema";

type Keyed<T> = { key: string } & T;

type RoadmapPriority = "In Flight" | "Q1 FY24" | "Q2 FY24" | "Q3 FY24" | "Q4 FY24" | "Q1 FY25" | "Q2 FY25" | "Q3 FY25";

type CapabilityLifecycleStatus =
  | "planned"
  | "in_progress"
  | "in_validation"
  | "active";

type CapabilityAlignmentRating = "low" | "medium" | "high";

type CapabilityRiskLevel = "low" | "medium" | "high";

type CapabilityMetadata = {
  roadmapPriority: RoadmapPriority;
  metrics?: string[];
  operatingRegions?: string[];
  primaryKPIs?: string[];
};

interface CapabilityDataModelGovernance
  extends Omit<
      InsertCapabilityDataModelMapping,
      "capabilityId" | "modelId" | "domainId" | "lifecyclePhaseId" | "metadata"
    > {
  capabilityKey: string;
  modelKey: string;
  domainKey?: string;
  lifecyclePhaseKey?: string;
  metadata?: CapabilityMetadata;
}

interface CapabilityModelSystemTrace
  extends Omit<InsertCapabilityModelSystemMapping, "capabilityId" | "modelId" | "systemId"> {
  capabilityKey: string;
  modelKey: string;
  systemKey: string;
}

interface LifecycleAssignmentSeed
  extends Omit<InsertModelLifecycleAssignment, "modelId" | "phaseId"> {
  modelKey: string;
  phaseKey: string;
}

const lifecyclePhasesSeed: InsertModelLifecyclePhase[] = [
  {
    key: "ideate",
    name: "Ideation",
    description: "Gather business needs and outline desired outcomes",
    sequence: 1,
    defaultDurationDays: 10,
    requiresApproval: false,
  },
  {
    key: "design",
    name: "Design",
    description: "Author conceptual and logical representations with stakeholders",
    sequence: 2,
    defaultDurationDays: 30,
    requiresApproval: true,
  },
  {
    key: "build",
    name: "Build",
    description: "Implement physical models and integration patterns",
    sequence: 3,
    defaultDurationDays: 25,
    requiresApproval: true,
  },
  {
    key: "validate",
    name: "Validate",
    description: "Complete testing, data quality checks, and sign-offs",
    sequence: 4,
    defaultDurationDays: 15,
    requiresApproval: true,
  },
  {
    key: "deploy",
    name: "Deploy",
    description: "Promote to production and enable consumption pathways",
    sequence: 5,
    defaultDurationDays: 10,
    requiresApproval: false,
  },
  {
    key: "monitor",
    name: "Monitor",
    description: "Track adoption, SLAs, and identify optimization opportunities",
    sequence: 6,
    defaultDurationDays: 30,
    requiresApproval: false,
  },
];

const systemsSeed: Array<Keyed<InsertSystem>> = [
  {
    key: "erpCore",
    name: "Enterprise Resource Planning",
    category: "ERP",
    type: "erp",
    description: "Central ERP platform covering finance, procurement, and production planning",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#2563eb",
  },
  {
    key: "plmSuite",
    name: "Product Lifecycle Management",
    category: "PLM",
    type: "plm",
    description: "PLM environment governing product definitions and engineering changes",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#db2777",
  },
  {
    key: "mesOrchestrator",
    name: "Manufacturing Execution Orchestrator",
    category: "MES",
    type: "mes",
    description: "MES platform coordinating shop-floor processes, quality, and performance",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#1d4ed8",
  },
  {
    key: "scmAps",
    name: "Supply Chain Planning & APS",
    category: "SCM/APS",
    type: "aps",
    description: "Advanced planning solution for demand, supply, and network optimization",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#16a34a",
  },
  {
    key: "wmsHub",
    name: "Warehouse Management Hub",
    category: "WMS",
    type: "wms",
    description: "Warehouse and logistics execution hub for fulfillment orchestration",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#f59e0b",
  },
  {
    key: "qmsCentral",
    name: "Quality Management Central",
    category: "QMS",
    type: "qms",
    description: "Quality and compliance platform handling inspections, deviations, and CAPA",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#f97316",
  },
  {
    key: "eamPlatform",
    name: "Asset & Maintenance Platform",
    category: "EAM/CMMS",
    type: "cmms",
    description: "Enterprise asset management for maintenance strategy and execution",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#0f172a",
  },
  {
    key: "crmFrontOffice",
    name: "Customer Relationship Management",
    category: "CRM",
    type: "crm",
    description: "Front-office CRM suite for sales, service, and customer engagement",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#ec4899",
  },
  {
    key: "iotEdge",
    name: "IoT & Edge Gateway",
    category: "IoT/Edge",
    type: "iot",
    description: "Edge-to-cloud gateway managing telemetry ingestion and device orchestration",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#22d3ee",
  },
  {
    key: "dataPlatform",
    name: "Manufacturing Data Platform",
    category: "Data Platform",
    type: "lakehouse",
    description: "Unified lakehouse and analytics platform for manufacturing data products",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#6366f1",
  },
  {
    key: "dataGovernance",
    name: "Data Governance & Catalog",
    category: "Data Governance",
    type: "catalog",
    description: "Catalog, glossary, and MDM services for governed manufacturing data",
    canBeSource: true,
    canBeTarget: true,
    status: "connected",
    colorCode: "#a855f7",
  },
];

const dataDomainsSeed: Array<Keyed<InsertDataDomain>> = [
  {
    key: "product",
    name: "Product",
    description: "Product structures, lifecycle definitions, and engineering changes",
    colorCode: "#ef4444",
  },
  {
    key: "supplier",
    name: "Supplier",
    description: "Supplier profiles, sourcing relationships, and contracts",
    colorCode: "#16a34a",
  },
  {
    key: "customer",
    name: "Customer",
    description: "Customer accounts, demand signals, and engagement history",
    colorCode: "#38bdf8",
  },
  {
    key: "operations",
    name: "Operations",
    description: "Manufacturing processes, planning, and execution telemetry",
    colorCode: "#0ea5e9",
  },
  {
    key: "inventory",
    name: "Inventory",
    description: "Material balances, storage locations, and fulfillment status",
    colorCode: "#facc15",
  },
  {
    key: "quality",
    name: "Quality",
    description: "Inspections, deviations, laboratory results, and quality KPIs",
    colorCode: "#fb923c",
  },
  {
    key: "asset",
    name: "Asset",
    description: "Equipment master data, maintenance strategies, and reliability records",
    colorCode: "#22c55e",
  },
  {
    key: "finance",
    name: "Finance",
    description: "Costing, financial ledgers, and manufacturing performance economics",
    colorCode: "#14b8a6",
  },
  {
    key: "hr",
    name: "HR",
    description: "Workforce, skills, labor assignments, and safety credentials",
    colorCode: "#f472b6",
  },
  {
    key: "compliance",
    name: "Compliance & ESG",
    description: "Regulatory controls, sustainability metrics, and ESG disclosures",
    colorCode: "#a855f7",
  },
];

const dataAreasSeed: Array<
  Keyed<Omit<InsertDataArea, "domainId">> & {
    domainKey: string;
  }
> = [];

const dataModelsSeed: Array<
  Keyed<
    Omit<InsertDataModel, "domainId" | "dataAreaId" | "targetSystemId" | "parentModelId">
  > & {
    domainKey?: string;
    areaKey?: string;
    targetSystemKey?: string;
    parentKey?: string;
  }
> = [
  {
    key: "enterpriseManufacturingCanonical",
    name: "Enterprise Manufacturing Canonical Model",
    layer: "conceptual",
    domainKey: "operations",
    targetSystemKey: "dataPlatform",
  },
  {
    key: "productLifecycleModel",
    name: "Product Lifecycle Reference Model",
    layer: "conceptual",
    domainKey: "product",
    targetSystemKey: "plmSuite",
  },
  {
    key: "manufacturingEngineeringModel",
    name: "Manufacturing Engineering Model",
    layer: "logical",
    domainKey: "operations",
    targetSystemKey: "mesOrchestrator",
    parentKey: "enterpriseManufacturingCanonical",
  },
  {
    key: "productionPlanningModel",
    name: "Production Planning Model",
    layer: "logical",
    domainKey: "operations",
    targetSystemKey: "erpCore",
    parentKey: "enterpriseManufacturingCanonical",
  },
  {
    key: "manufacturingExecutionModel",
    name: "Manufacturing Execution Model",
    layer: "physical",
    domainKey: "operations",
    targetSystemKey: "mesOrchestrator",
    parentKey: "enterpriseManufacturingCanonical",
  },
  {
    key: "supplyChainPlanningModel",
    name: "Supply Chain Planning Model",
    layer: "logical",
    domainKey: "operations",
    targetSystemKey: "scmAps",
    parentKey: "enterpriseManufacturingCanonical",
  },
  {
    key: "logisticsVisibilityModel",
    name: "Logistics Visibility Model",
    layer: "logical",
    domainKey: "inventory",
    targetSystemKey: "wmsHub",
    parentKey: "enterpriseManufacturingCanonical",
  },
  {
    key: "inventoryWarehouseModel",
    name: "Inventory & Warehouse Model",
    layer: "physical",
    domainKey: "inventory",
    targetSystemKey: "wmsHub",
    parentKey: "logisticsVisibilityModel",
  },
  {
    key: "qualityManagementModel",
    name: "Quality Management Model",
    layer: "conceptual",
    domainKey: "quality",
    targetSystemKey: "qmsCentral",
  },
  {
    key: "assetMaintenanceModel",
    name: "Asset Maintenance Model",
    layer: "conceptual",
    domainKey: "asset",
    targetSystemKey: "eamPlatform",
  },
  {
    key: "safetyIncidentModel",
    name: "Industrial Safety Model",
    layer: "conceptual",
    domainKey: "compliance",
    targetSystemKey: "dataGovernance",
  },
  {
    key: "sustainabilityReportingModel",
    name: "Sustainability & Compliance Model",
    layer: "physical",
    domainKey: "compliance",
    targetSystemKey: "dataPlatform",
    parentKey: "safetyIncidentModel",
  },
  {
    key: "procurementModel",
    name: "Procurement & Supplier Model",
    layer: "logical",
    domainKey: "supplier",
    targetSystemKey: "erpCore",
  },
  {
    key: "salesCustomerModel",
    name: "Sales & Customer Model",
    layer: "logical",
    domainKey: "customer",
    targetSystemKey: "crmFrontOffice",
  },
  {
    key: "financeCostingModel",
    name: "Finance & Costing Model",
    layer: "physical",
    domainKey: "finance",
    targetSystemKey: "erpCore",
  },
  {
    key: "workforceModel",
    name: "Workforce & HR Model",
    layer: "logical",
    domainKey: "hr",
    targetSystemKey: "erpCore",
  },
  {
    key: "enterpriseDataArchitecture",
    name: "Enterprise Data Architecture",
    layer: "conceptual",
    domainKey: "operations",
    targetSystemKey: "dataPlatform",
  },
  {
    key: "masterDataHub",
    name: "Master Data Hub",
    layer: "physical",
    domainKey: "product",
    targetSystemKey: "dataGovernance",
    parentKey: "enterpriseDataArchitecture",
  },
  {
    key: "metadataCatalogModel",
    name: "Metadata & Glossary Model",
    layer: "conceptual",
    domainKey: "compliance",
    targetSystemKey: "dataGovernance",
  },
  {
    key: "dataQualityModel",
    name: "Data Quality & Governance Model",
    layer: "logical",
    domainKey: "quality",
    targetSystemKey: "dataGovernance",
    parentKey: "metadataCatalogModel",
  },
  {
    key: "analyticsAiModel",
    name: "Analytics & AI Model",
    layer: "physical",
    domainKey: "operations",
    targetSystemKey: "dataPlatform",
    parentKey: "enterpriseManufacturingCanonical",
  },
  {
    key: "iotEdgeModel",
    name: "IoT & Edge Data Model",
    layer: "conceptual",
    domainKey: "operations",
    targetSystemKey: "iotEdge",
    parentKey: "enterpriseManufacturingCanonical",
  },
  {
    key: "integrationApiModel",
    name: "Integration & API Model",
    layer: "logical",
    domainKey: "operations",
    targetSystemKey: "dataPlatform",
    parentKey: "enterpriseManufacturingCanonical",
  },
];

const dataObjectsSeed: Array<
  Keyed<
    Omit<InsertDataObject, "modelId" | "domainId" | "dataAreaId" | "sourceSystemId" | "targetSystemId">
  > & {
    modelKey: string;
    domainKey?: string;
    areaKey?: string;
    sourceSystemKey?: string;
    targetSystemKey?: string;
  }
> = [
  {
    key: "productMasterRecord",
    name: "Product Master Record",
    modelKey: "productLifecycleModel",
    domainKey: "product",
    sourceSystemKey: "plmSuite",
    targetSystemKey: "dataPlatform",
    description: "Authoritative product definition with BOM and revision history",
    objectType: "entity",
    position: { x: 120, y: 120 },
  },
  {
    key: "manufacturingProcessPlan",
    name: "Manufacturing Process Plan",
    modelKey: "manufacturingEngineeringModel",
    domainKey: "operations",
    sourceSystemKey: "mesOrchestrator",
    targetSystemKey: "dataPlatform",
    description: "Process routings, work instructions, and resource requirements",
    objectType: "entity",
    position: { x: 320, y: 120 },
  },
  {
    key: "productionSchedule",
    name: "Production Schedule",
    modelKey: "productionPlanningModel",
    domainKey: "operations",
    sourceSystemKey: "erpCore",
    targetSystemKey: "dataPlatform",
    description: "Finite production schedule by plant, line, and horizon",
    objectType: "fact",
    position: { x: 520, y: 120 },
  },
  {
    key: "executionEvent",
    name: "Execution Event",
    modelKey: "manufacturingExecutionModel",
    domainKey: "operations",
    sourceSystemKey: "mesOrchestrator",
    targetSystemKey: "dataPlatform",
    description: "Shop-floor execution events capturing status, labor, and output",
    objectType: "event",
    position: { x: 720, y: 120 },
  },
  {
    key: "supplyPlan",
    name: "Supply Plan",
    modelKey: "supplyChainPlanningModel",
    domainKey: "operations",
    sourceSystemKey: "scmAps",
    targetSystemKey: "dataPlatform",
    description: "Integrated demand, supply, and inventory plans across the network",
    objectType: "fact",
    position: { x: 120, y: 300 },
  },
  {
    key: "shipmentOrder",
    name: "Shipment Order",
    modelKey: "logisticsVisibilityModel",
    domainKey: "inventory",
    sourceSystemKey: "wmsHub",
    targetSystemKey: "dataPlatform",
    description: "Outbound and inbound shipment orchestration records",
    objectType: "event",
    position: { x: 320, y: 300 },
  },
  {
    key: "inventorySnapshot",
    name: "Inventory Snapshot",
    modelKey: "inventoryWarehouseModel",
    domainKey: "inventory",
    sourceSystemKey: "wmsHub",
    targetSystemKey: "dataPlatform",
    description: "Daily inventory balances with location and lot attributes",
    objectType: "fact",
    position: { x: 520, y: 300 },
  },
  {
    key: "qualityInspection",
    name: "Quality Inspection Result",
    modelKey: "qualityManagementModel",
    domainKey: "quality",
    sourceSystemKey: "qmsCentral",
    targetSystemKey: "dataPlatform",
    description: "Inspection characteristics, findings, and disposition decisions",
    objectType: "fact",
    position: { x: 720, y: 300 },
  },
  {
    key: "assetWorkOrder",
    name: "Asset Work Order",
    modelKey: "assetMaintenanceModel",
    domainKey: "asset",
    sourceSystemKey: "eamPlatform",
    targetSystemKey: "dataPlatform",
    description: "Planned and corrective maintenance work orders with cost breakdown",
    objectType: "event",
    position: { x: 120, y: 480 },
  },
  {
    key: "safetyIncident",
    name: "Safety Incident",
    modelKey: "safetyIncidentModel",
    domainKey: "compliance",
    sourceSystemKey: "dataGovernance",
    targetSystemKey: "dataPlatform",
    description: "Industrial safety incident log with investigation status",
    objectType: "event",
    position: { x: 320, y: 480 },
  },
  {
    key: "sustainabilityScorecard",
    name: "Sustainability Scorecard",
    modelKey: "sustainabilityReportingModel",
    domainKey: "compliance",
    sourceSystemKey: "dataGovernance",
    targetSystemKey: "dataPlatform",
    description: "Aggregated ESG metrics and regulatory disclosures",
    objectType: "fact",
    position: { x: 520, y: 480 },
  },
  {
    key: "supplierContract",
    name: "Supplier Contract",
    modelKey: "procurementModel",
    domainKey: "supplier",
    sourceSystemKey: "erpCore",
    targetSystemKey: "dataPlatform",
    description: "Sourcing agreements, terms, and supplier compliance obligations",
    objectType: "entity",
    position: { x: 720, y: 480 },
  },
  {
    key: "customerEngagement",
    name: "Customer Engagement",
    modelKey: "salesCustomerModel",
    domainKey: "customer",
    sourceSystemKey: "crmFrontOffice",
    targetSystemKey: "dataPlatform",
    description: "Opportunity, order, and service interaction history",
    objectType: "event",
    position: { x: 120, y: 660 },
  },
  {
    key: "financeLedger",
    name: "Finance Ledger",
    modelKey: "financeCostingModel",
    domainKey: "finance",
    sourceSystemKey: "erpCore",
    targetSystemKey: "dataPlatform",
    description: "Manufacturing cost ledger with allocations and variances",
    objectType: "fact",
    position: { x: 320, y: 660 },
  },
  {
    key: "workforceAssignment",
    name: "Workforce Assignment",
    modelKey: "workforceModel",
    domainKey: "hr",
    sourceSystemKey: "erpCore",
    targetSystemKey: "dataPlatform",
    description: "Labor assignments, certifications, and shift compliance",
    objectType: "fact",
    position: { x: 520, y: 660 },
  },
  {
    key: "masterDataRecord",
    name: "Master Data Record",
    modelKey: "masterDataHub",
    domainKey: "product",
    sourceSystemKey: "dataGovernance",
    targetSystemKey: "dataPlatform",
    description: "Golden record reconciled across product, supplier, and customer domains",
    objectType: "entity",
    position: { x: 720, y: 660 },
  },
  {
    key: "metadataEntry",
    name: "Metadata Entry",
    modelKey: "metadataCatalogModel",
    domainKey: "compliance",
    sourceSystemKey: "dataGovernance",
    targetSystemKey: "dataPlatform",
    description: "Cataloged data asset with glossary definitions and ownership",
    objectType: "reference",
    position: { x: 120, y: 840 },
  },
  {
    key: "dataQualityRule",
    name: "Data Quality Rule",
    modelKey: "dataQualityModel",
    domainKey: "quality",
    sourceSystemKey: "dataGovernance",
    targetSystemKey: "dataPlatform",
    description: "Measurement rules, thresholds, and remediation workflows",
    objectType: "rule",
    position: { x: 320, y: 840 },
  },
  {
    key: "analyticsFeature",
    name: "Analytics Feature",
    modelKey: "analyticsAiModel",
    domainKey: "operations",
    sourceSystemKey: "dataPlatform",
    targetSystemKey: "dataPlatform",
    description: "Curated features powering advanced analytics and AI products",
    objectType: "feature",
    position: { x: 520, y: 840 },
  },
  {
    key: "iotTelemetry",
    name: "IoT Telemetry",
    modelKey: "iotEdgeModel",
    domainKey: "operations",
    sourceSystemKey: "iotEdge",
    targetSystemKey: "dataPlatform",
    description: "High-frequency machine telemetry and condition monitoring data",
    objectType: "event",
    position: { x: 720, y: 840 },
  },
  {
    key: "apiSpecification",
    name: "API Specification",
    modelKey: "integrationApiModel",
    domainKey: "operations",
    sourceSystemKey: "dataPlatform",
    targetSystemKey: "dataPlatform",
    description: "Integration contract metadata with versioning and SLA commitments",
    objectType: "reference",
    position: { x: 920, y: 840 },
  },
];

const attributesSeed: Array<
  Keyed<Omit<InsertAttribute, "objectId">> & {
    objectKey: string;
  }
> = [
  {
    key: "productMasterId",
    name: "product_id",
    objectKey: "productMasterRecord",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Unique identifier for the product master record",
  },
  {
    key: "processPlanId",
    name: "process_plan_id",
    objectKey: "manufacturingProcessPlan",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Primary key for the manufacturing process plan",
  },
  {
    key: "productionScheduleId",
    name: "schedule_id",
    objectKey: "productionSchedule",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for a production schedule version",
  },
  {
    key: "executionEventId",
    name: "event_id",
    objectKey: "executionEvent",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Unique identifier for each execution event",
  },
  {
    key: "supplyPlanId",
    name: "supply_plan_id",
    objectKey: "supplyPlan",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for a supply plan scenario",
  },
  {
    key: "shipmentOrderId",
    name: "shipment_id",
    objectKey: "shipmentOrder",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Shipment order identifier",
  },
  {
    key: "inventorySnapshotId",
    name: "snapshot_id",
    objectKey: "inventorySnapshot",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for a captured inventory snapshot",
  },
  {
    key: "qualityInspectionId",
    name: "inspection_id",
    objectKey: "qualityInspection",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Primary key for the inspection result",
  },
  {
    key: "assetWorkOrderId",
    name: "work_order_id",
    objectKey: "assetWorkOrder",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Maintenance work order identifier",
  },
  {
    key: "safetyIncidentId",
    name: "incident_id",
    objectKey: "safetyIncident",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for a safety incident record",
  },
  {
    key: "sustainabilityScorecardId",
    name: "scorecard_id",
    objectKey: "sustainabilityScorecard",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Unique identifier for ESG scorecard entries",
  },
  {
    key: "supplierContractId",
    name: "contract_id",
    objectKey: "supplierContract",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Primary key for supplier contract records",
  },
  {
    key: "customerEngagementId",
    name: "engagement_id",
    objectKey: "customerEngagement",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for a customer engagement event",
  },
  {
    key: "financeLedgerEntryId",
    name: "ledger_entry_id",
    objectKey: "financeLedger",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for manufacturing ledger entries",
  },
  {
    key: "workforceAssignmentId",
    name: "assignment_id",
    objectKey: "workforceAssignment",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for workforce assignment records",
  },
  {
    key: "masterDataRecordId",
    name: "golden_record_id",
    objectKey: "masterDataRecord",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Unique identifier for harmonized master data records",
  },
  {
    key: "metadataEntryId",
    name: "catalog_item_id",
    objectKey: "metadataEntry",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for cataloged metadata assets",
  },
  {
    key: "dataQualityRuleId",
    name: "rule_id",
    objectKey: "dataQualityRule",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for a data quality rule",
  },
  {
    key: "analyticsFeatureId",
    name: "feature_id",
    objectKey: "analyticsFeature",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for engineered analytics feature records",
  },
  {
    key: "iotTelemetryId",
    name: "telemetry_id",
    objectKey: "iotTelemetry",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for IoT telemetry series",
  },
  {
    key: "apiSpecificationId",
    name: "api_id",
    objectKey: "apiSpecification",
    conceptualType: "Identifier",
    logicalType: "UUID",
    physicalType: "UUID",
    nullable: false,
    isPrimaryKey: true,
    description: "Identifier for managed API specifications",
  },
];

const capabilitiesSeed = [
  {
    key: "capManufacturingEnterprise",
    name: "Manufacturing Enterprise",
    code: "MFG-ENT",
    level: 1,
    description: "Unified manufacturing business capability hierarchy spanning planning, execution, insight, and support",
    sortOrder: 1,
    colorCode: "#1e3a8a",
    maturityLevel: "defined",
    criticality: "critical",
  },
  {
    key: "capCoreManufacturing",
    name: "Core Manufacturing",
    code: "MFG-CORE",
    level: 2,
    parentKey: "capManufacturingEnterprise",
    description: "Capabilities that design, plan, make, move, and assure manufactured products",
    sortOrder: 10,
    colorCode: "#2563eb",
    maturityLevel: "managed",
    criticality: "critical",
  },
  {
    key: "capBusinessSupport",
    name: "Business Support",
    code: "MFG-BSUP",
    level: 2,
    parentKey: "capManufacturingEnterprise",
    description: "Supporting functions enabling procurement, commercial, finance, and people outcomes",
    sortOrder: 20,
    colorCode: "#0284c7",
    maturityLevel: "defined",
    criticality: "high",
  },
  {
    key: "capDataDigital",
    name: "Data & Digital",
    code: "MFG-DATA",
    level: 2,
    parentKey: "capManufacturingEnterprise",
    description: "Digital, data, and integration capabilities that fuel modernization and intelligence",
    sortOrder: 30,
    colorCode: "#0f172a",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capProcurementDomain",
    name: "Procurement",
    code: "MFG-PROC",
    level: 2,
    parentKey: "capManufacturingEnterprise",
    description: "Direct, indirect, and strategic sourcing capabilities ensuring resilient supply partnerships",
    sortOrder: 40,
    colorCode: "#15803d",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capHumanCapitalDomain",
    name: "Human Capital",
    code: "MFG-HC",
    level: 2,
    parentKey: "capManufacturingEnterprise",
    description: "Talent management, workforce deployment, and labor relations for manufacturing operations",
    sortOrder: 50,
    colorCode: "#dc4d92",
    maturityLevel: "developing",
    criticality: "medium",
  },
  {
    key: "capEngineeringDomain",
    name: "Engineering",
    code: "MFG-ENG",
    level: 2,
    parentKey: "capManufacturingEnterprise",
    description: "Product and process engineering disciplines that industrialize manufacturable designs",
    sortOrder: 60,
    colorCode: "#1d4ed8",
    maturityLevel: "managed",
    criticality: "high",
  },
  {
    key: "capMaintenanceDomain",
    name: "Maintenance",
    code: "MFG-MAINT",
    level: 2,
    parentKey: "capManufacturingEnterprise",
    description: "Asset strategy, reliability engineering, and field service operations for plant equipment",
    sortOrder: 70,
    colorCode: "#0f172a",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capProductLifecycleManagement",
    name: "Product Lifecycle Management",
    code: "CORE-PLM",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Define product structures, manage engineering change, and release manufacturable designs",
    sortOrder: 11,
    colorCode: "#db2777",
    maturityLevel: "managed",
    criticality: "high",
  },
  {
    key: "capManufacturingEngineering",
    name: "Manufacturing Engineering",
    code: "CORE-ME",
    level: 3,
    parentKey: "capEngineeringDomain",
    description: "Industrialize processes, author routings, and optimize resource utilization",
    sortOrder: 12,
    colorCode: "#1d4ed8",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capProductionPlanning",
    name: "Production Planning",
    code: "CORE-PP",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Balance demand, capacity, and material supply into executable manufacturing plans",
    sortOrder: 13,
    colorCode: "#2563eb",
    maturityLevel: "managed",
    criticality: "high",
  },
  {
    key: "capManufacturingExecution",
    name: "Manufacturing Execution",
    code: "CORE-MES",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Execute production, capture shop-floor events, and ensure throughput with quality",
    sortOrder: 14,
    colorCode: "#1e40af",
    maturityLevel: "developing",
    criticality: "critical",
  },
  {
    key: "capSupplyChainPlanning",
    name: "Supply Chain Planning",
    code: "CORE-SCP",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Optimize network sourcing, supply, and fulfillment scenarios",
    sortOrder: 15,
    colorCode: "#16a34a",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capLogistics",
    name: "Logistics",
    code: "CORE-LOG",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Coordinate inbound, outbound, and transportation operations across the network",
    sortOrder: 16,
    colorCode: "#f59e0b",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capInventoryWarehouse",
    name: "Inventory & Warehouse",
    code: "CORE-INV",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Manage inventory accuracy, storage optimization, and warehouse execution",
    sortOrder: 17,
    colorCode: "#facc15",
    maturityLevel: "managed",
    criticality: "high",
  },
  {
    key: "capQualityManagement",
    name: "Quality Management",
    code: "CORE-QLT",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Plan, inspect, and control quality with traceable records and dispositions",
    sortOrder: 18,
    colorCode: "#f97316",
    maturityLevel: "defined",
    criticality: "critical",
  },
  {
    key: "capMaintenanceAsset",
    name: "Maintenance & Asset",
    code: "CORE-MA",
    level: 3,
    parentKey: "capMaintenanceDomain",
    description: "Sustain asset health, schedule maintenance, and manage reliability programs",
    sortOrder: 19,
    colorCode: "#0f172a",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capIndustrialSafety",
    name: "Industrial Safety",
    code: "CORE-SAFE",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Prevent, record, and remediate safety incidents across plants and operations",
    sortOrder: 20,
    colorCode: "#a855f7",
    maturityLevel: "basic",
    criticality: "high",
  },
  {
    key: "capSustainabilityCompliance",
    name: "Sustainability & Compliance",
    code: "CORE-ESG",
    level: 3,
    parentKey: "capCoreManufacturing",
    description: "Track environmental, social, and regulatory commitments",
    sortOrder: 21,
    colorCode: "#22c55e",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capProcurementSupplier",
    name: "Procurement & Supplier",
    code: "SUP-PS",
    level: 3,
    parentKey: "capProcurementDomain",
    description: "Source materials, manage suppliers, and negotiate commercial agreements",
    sortOrder: 22,
    colorCode: "#16a34a",
    maturityLevel: "managed",
    criticality: "high",
  },
  {
    key: "capSalesCustomer",
    name: "Sales & Customer",
    code: "SUP-SC",
    level: 3,
    parentKey: "capBusinessSupport",
    description: "Engage customers, capture demand, and manage order-to-cash",
    sortOrder: 23,
    colorCode: "#38bdf8",
    maturityLevel: "defined",
    criticality: "medium",
  },
  {
    key: "capFinanceCosting",
    name: "Finance & Costing",
    code: "SUP-FC",
    level: 3,
    parentKey: "capBusinessSupport",
    description: "Control manufacturing financial performance and costing",
    sortOrder: 24,
    colorCode: "#14b8a6",
    maturityLevel: "managed",
    criticality: "high",
  },
  {
    key: "capWorkforceHr",
    name: "Workforce & HR",
    code: "SUP-HR",
    level: 3,
    parentKey: "capHumanCapitalDomain",
    description: "Develop skills, manage labor, and ensure workforce compliance",
    sortOrder: 25,
    colorCode: "#f472b6",
    maturityLevel: "developing",
    criticality: "medium",
  },
  {
    key: "capDataModelingArchitecture",
    name: "Data Modeling & Architecture",
    code: "DATA-ARCH",
    level: 3,
    parentKey: "capDataDigital",
    description: "Design canonical data models and govern architectural standards",
    sortOrder: 26,
    colorCode: "#6366f1",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capMasterDataManagement",
    name: "Master Data Management",
    code: "DATA-MDM",
    level: 3,
    parentKey: "capDataDigital",
    description: "Harmonize master data and steward golden records across domains",
    sortOrder: 27,
    colorCode: "#db2777",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capMetadataGlossary",
    name: "Metadata & Glossary",
    code: "DATA-META",
    level: 3,
    parentKey: "capDataDigital",
    description: "Curate business terms, lineage, and data asset catalog",
    sortOrder: 28,
    colorCode: "#a855f7",
    maturityLevel: "basic",
    criticality: "medium",
  },
  {
    key: "capDataQualityGovernance",
    name: "Data Quality & Governance",
    code: "DATA-DQ",
    level: 3,
    parentKey: "capDataDigital",
    description: "Define rules, monitor quality, and govern remediation workflows",
    sortOrder: 29,
    colorCode: "#f97316",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capAnalyticsAi",
    name: "Analytics & AI",
    code: "DATA-AI",
    level: 3,
    parentKey: "capDataDigital",
    description: "Develop and operationalize manufacturing analytics, AI, and decision intelligence",
    sortOrder: 30,
    colorCode: "#0ea5e9",
    maturityLevel: "developing",
    criticality: "high",
  },
  {
    key: "capIotEdgeData",
    name: "IoT & Edge Data Management",
    code: "DATA-IOT",
    level: 3,
    parentKey: "capDataDigital",
    description: "Collect, contextualize, and orchestrate edge telemetry and machine data",
    sortOrder: 31,
    colorCode: "#22d3ee",
    maturityLevel: "basic",
    criticality: "medium",
  },
  {
    key: "capIntegrationApis",
    name: "Integration & APIs",
    code: "DATA-INT",
    level: 3,
    parentKey: "capDataDigital",
    description: "Deliver secure integrations, APIs, and event streaming for manufacturing",
    sortOrder: 32,
    colorCode: "#6366f1",
    maturityLevel: "developing",
    criticality: "high",
  },
];

const capabilityDomainMappingsSeed: Array<
  Omit<InsertCapabilityDataDomainMapping, "capabilityId" | "domainId"> & {
    capabilityKey: string;
    domainKey: string;
  }
> = [
  { capabilityKey: "capProcurementDomain", domainKey: "supplier", mappingType: "strategic" },
  { capabilityKey: "capHumanCapitalDomain", domainKey: "hr", mappingType: "strategic" },
  { capabilityKey: "capEngineeringDomain", domainKey: "product", mappingType: "strategic" },
  { capabilityKey: "capMaintenanceDomain", domainKey: "asset", mappingType: "strategic" },
  { capabilityKey: "capProductLifecycleManagement", domainKey: "product", mappingType: "primary" },
  { capabilityKey: "capManufacturingEngineering", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capProductionPlanning", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capManufacturingExecution", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capSupplyChainPlanning", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capSupplyChainPlanning", domainKey: "supplier", mappingType: "supporting" },
  { capabilityKey: "capLogistics", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capLogistics", domainKey: "inventory", mappingType: "supporting" },
  { capabilityKey: "capInventoryWarehouse", domainKey: "inventory", mappingType: "primary" },
  { capabilityKey: "capQualityManagement", domainKey: "quality", mappingType: "primary" },
  { capabilityKey: "capMaintenanceAsset", domainKey: "asset", mappingType: "primary" },
  { capabilityKey: "capIndustrialSafety", domainKey: "compliance", mappingType: "primary" },
  { capabilityKey: "capSustainabilityCompliance", domainKey: "compliance", mappingType: "primary" },
  { capabilityKey: "capProcurementSupplier", domainKey: "supplier", mappingType: "primary" },
  { capabilityKey: "capSalesCustomer", domainKey: "customer", mappingType: "primary" },
  { capabilityKey: "capFinanceCosting", domainKey: "finance", mappingType: "primary" },
  { capabilityKey: "capWorkforceHr", domainKey: "hr", mappingType: "primary" },
  { capabilityKey: "capDataModelingArchitecture", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capMasterDataManagement", domainKey: "product", mappingType: "primary" },
  { capabilityKey: "capMasterDataManagement", domainKey: "supplier", mappingType: "supporting" },
  { capabilityKey: "capMasterDataManagement", domainKey: "customer", mappingType: "supporting" },
  { capabilityKey: "capMetadataGlossary", domainKey: "compliance", mappingType: "primary" },
  { capabilityKey: "capDataQualityGovernance", domainKey: "quality", mappingType: "primary" },
  { capabilityKey: "capDataQualityGovernance", domainKey: "compliance", mappingType: "supporting" },
  { capabilityKey: "capAnalyticsAi", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capIotEdgeData", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capIotEdgeData", domainKey: "asset", mappingType: "supporting" },
  { capabilityKey: "capIntegrationApis", domainKey: "operations", mappingType: "primary" },
  { capabilityKey: "capIntegrationApis", domainKey: "supplier", mappingType: "supporting" },
];

const capabilityAreaMappingsSeed: Array<
  Omit<InsertCapabilityDataAreaMapping, "capabilityId" | "dataAreaId"> & {
    capabilityKey: string;
    areaKey: string;
  }
> = [];

const capabilitySystemMappingsSeed: Array<
  Omit<InsertCapabilitySystemMapping, "capabilityId" | "systemId"> & {
    capabilityKey: string;
    systemKey: string;
  }
> = [
  { capabilityKey: "capProcurementDomain", systemKey: "erpCore", mappingType: "governs", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capHumanCapitalDomain", systemKey: "erpCore", mappingType: "governs", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capEngineeringDomain", systemKey: "plmSuite", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capEngineeringDomain", systemKey: "mesOrchestrator", mappingType: "integrates", systemRole: "supporting", coverage: "partial" },
  { capabilityKey: "capMaintenanceDomain", systemKey: "eamPlatform", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capProductLifecycleManagement", systemKey: "plmSuite", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capManufacturingEngineering", systemKey: "mesOrchestrator", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capProductionPlanning", systemKey: "erpCore", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capManufacturingExecution", systemKey: "mesOrchestrator", mappingType: "automates", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capSupplyChainPlanning", systemKey: "scmAps", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capLogistics", systemKey: "wmsHub", mappingType: "automates", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capInventoryWarehouse", systemKey: "wmsHub", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capQualityManagement", systemKey: "qmsCentral", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capMaintenanceAsset", systemKey: "eamPlatform", mappingType: "automates", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capIndustrialSafety", systemKey: "dataGovernance", mappingType: "supports", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capSustainabilityCompliance", systemKey: "dataPlatform", mappingType: "supports", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capProcurementSupplier", systemKey: "erpCore", mappingType: "enables", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capSalesCustomer", systemKey: "crmFrontOffice", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capFinanceCosting", systemKey: "erpCore", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capWorkforceHr", systemKey: "erpCore", mappingType: "supports", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capDataModelingArchitecture", systemKey: "dataPlatform", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capMasterDataManagement", systemKey: "dataGovernance", mappingType: "enables", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capMetadataGlossary", systemKey: "dataGovernance", mappingType: "supports", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capDataQualityGovernance", systemKey: "dataGovernance", mappingType: "supports", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capAnalyticsAi", systemKey: "dataPlatform", mappingType: "supports", systemRole: "primary", coverage: "full" },
  { capabilityKey: "capIotEdgeData", systemKey: "iotEdge", mappingType: "enables", systemRole: "primary", coverage: "partial" },
  { capabilityKey: "capIntegrationApis", systemKey: "dataPlatform", mappingType: "enables", systemRole: "primary", coverage: "full" },
];

const dataModelSystemMappingsSeed: Array<
  Omit<InsertDataModelSystemMapping, "modelId" | "systemId"> & {
    modelKey: string;
    systemKey: string;
  }
> = [
  { modelKey: "enterpriseManufacturingCanonical", systemKey: "dataPlatform", relationshipType: "canonical", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "productLifecycleModel", systemKey: "plmSuite", relationshipType: "authoritative", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "productLifecycleModel", systemKey: "dataPlatform", relationshipType: "publishes", systemRole: "consumer", lifecycleState: "active" },
  { modelKey: "manufacturingEngineeringModel", systemKey: "mesOrchestrator", relationshipType: "integration", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "manufacturingEngineeringModel", systemKey: "dataPlatform", relationshipType: "publishes", systemRole: "consumer", lifecycleState: "build" },
  { modelKey: "productionPlanningModel", systemKey: "erpCore", relationshipType: "integration", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "productionPlanningModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "active" },
  { modelKey: "manufacturingExecutionModel", systemKey: "mesOrchestrator", relationshipType: "integration", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "manufacturingExecutionModel", systemKey: "dataPlatform", relationshipType: "telemetry", systemRole: "consumer", lifecycleState: "active" },
  { modelKey: "supplyChainPlanningModel", systemKey: "scmAps", relationshipType: "integration", systemRole: "primary", lifecycleState: "design" },
  { modelKey: "supplyChainPlanningModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "design" },
  { modelKey: "logisticsVisibilityModel", systemKey: "wmsHub", relationshipType: "integration", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "logisticsVisibilityModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "build" },
  { modelKey: "inventoryWarehouseModel", systemKey: "wmsHub", relationshipType: "integration", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "inventoryWarehouseModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "build" },
  { modelKey: "qualityManagementModel", systemKey: "qmsCentral", relationshipType: "integration", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "qualityManagementModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "active" },
  { modelKey: "assetMaintenanceModel", systemKey: "eamPlatform", relationshipType: "integration", systemRole: "primary", lifecycleState: "design" },
  { modelKey: "assetMaintenanceModel", systemKey: "dataPlatform", relationshipType: "analytics", systemRole: "consumer", lifecycleState: "design" },
  { modelKey: "safetyIncidentModel", systemKey: "dataGovernance", relationshipType: "catalog", systemRole: "primary", lifecycleState: "design" },
  { modelKey: "safetyIncidentModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "design" },
  { modelKey: "sustainabilityReportingModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "procurementModel", systemKey: "erpCore", relationshipType: "integration", systemRole: "primary", lifecycleState: "design" },
  { modelKey: "procurementModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "design" },
  { modelKey: "salesCustomerModel", systemKey: "crmFrontOffice", relationshipType: "integration", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "salesCustomerModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "active" },
  { modelKey: "financeCostingModel", systemKey: "erpCore", relationshipType: "integration", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "financeCostingModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "active" },
  { modelKey: "workforceModel", systemKey: "erpCore", relationshipType: "integration", systemRole: "primary", lifecycleState: "design" },
  { modelKey: "workforceModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "design" },
  { modelKey: "enterpriseDataArchitecture", systemKey: "dataPlatform", relationshipType: "canonical", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "enterpriseDataArchitecture", systemKey: "dataGovernance", relationshipType: "governs", systemRole: "supporting", lifecycleState: "active" },
  { modelKey: "masterDataHub", systemKey: "dataGovernance", relationshipType: "authoritative", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "masterDataHub", systemKey: "dataPlatform", relationshipType: "publishes", systemRole: "consumer", lifecycleState: "build" },
  { modelKey: "metadataCatalogModel", systemKey: "dataGovernance", relationshipType: "catalog", systemRole: "primary", lifecycleState: "active" },
  { modelKey: "metadataCatalogModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "active" },
  { modelKey: "dataQualityModel", systemKey: "dataGovernance", relationshipType: "rules", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "dataQualityModel", systemKey: "dataPlatform", relationshipType: "monitor", systemRole: "consumer", lifecycleState: "build" },
  { modelKey: "analyticsAiModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "iotEdgeModel", systemKey: "iotEdge", relationshipType: "ingest", systemRole: "primary", lifecycleState: "build" },
  { modelKey: "iotEdgeModel", systemKey: "dataPlatform", relationshipType: "delivery", systemRole: "consumer", lifecycleState: "build" },
  { modelKey: "integrationApiModel", systemKey: "dataPlatform", relationshipType: "integration", systemRole: "primary", lifecycleState: "design" },
];

const capabilityDataModelMappingsSeed: CapabilityDataModelGovernance[] = [
  {
    capabilityKey: "capProcurementDomain",
    modelKey: "procurementModel",
    domainKey: "supplier",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Chief Procurement Officer",
    dataSteward: "Procurement Data Steward",
    solutionArchitect: "Source-to-Pay Architect",
    dataCustodian: "Procurement Analytics",
    qaOwner: "Procurement QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Procurement domain oversight aligning category management and supplier collaboration",
    metadata: { roadmapPriority: "Q2 FY24", operatingRegions: ["NA", "EU"], primaryKPIs: ["PO Cycle Time"] },
  },
  {
    capabilityKey: "capHumanCapitalDomain",
    modelKey: "workforceModel",
    domainKey: "hr",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "in_progress",
    alignmentRating: "medium",
    businessValueScore: 3,
    readinessScore: 2,
    riskLevel: "medium",
    governanceOwner: "Chief Human Resources Officer",
    dataSteward: "HR Data Steward",
    solutionArchitect: "Workforce Architect",
    dataCustodian: "HR Operations",
    qaOwner: "HR Compliance",
    reviewCadence: "Quarterly",
    authoritativeSource: false,
    notes: "Human capital domain harmonizing skills, labor hours, and credential data",
    metadata: { roadmapPriority: "Q3 FY24", metrics: ["Labor Availability"], operatingRegions: ["NA"] },
  },
  {
    capabilityKey: "capEngineeringDomain",
    modelKey: "manufacturingEngineeringModel",
    domainKey: "operations",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "in_progress",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "VP Engineering",
    dataSteward: "Engineering Data Steward",
    solutionArchitect: "Manufacturing Engineer",
    dataCustodian: "Engineering Ops",
    qaOwner: "Engineering QA",
    reviewCadence: "Monthly",
    authoritativeSource: false,
    notes: "Engineering domain connecting design standards with routings and BOMs",
    metadata: { roadmapPriority: "Q1 FY25", metrics: ["Engineering Change Lead Time"] },
  },
  {
    capabilityKey: "capMaintenanceDomain",
    modelKey: "assetMaintenanceModel",
    domainKey: "asset",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Director Maintenance Programs",
    dataSteward: "Reliability Data Steward",
    solutionArchitect: "Maintenance Architect",
    dataCustodian: "Maintenance Ops",
    qaOwner: "Reliability QA",
    reviewCadence: "Bi-Monthly",
    authoritativeSource: false,
    notes: "Maintenance domain aligning asset strategies with failure analytics",
    metadata: { roadmapPriority: "Q4 FY24", operatingRegions: ["Global"], primaryKPIs: ["MTBF"] },
  },
  {
    capabilityKey: "capProductLifecycleManagement",
    modelKey: "productLifecycleModel",
    domainKey: "product",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 4,
    riskLevel: "medium",
    governanceOwner: "VP Product Lifecycle",
    dataSteward: "PLM Data Steward",
    solutionArchitect: "PLM Solution Architect",
    dataCustodian: "PLM Operations",
    qaOwner: "Product Quality Lead",
    reviewCadence: "Quarterly",
    authoritativeSource: true,
    notes: "Controls product structure and release governance",
    metadata: { roadmapPriority: "In Flight", operatingRegions: ["NA", "EU"] },
  },
  {
    capabilityKey: "capManufacturingEngineering",
    modelKey: "manufacturingEngineeringModel",
    domainKey: "operations",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "in_progress",
    alignmentRating: "high",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Director Manufacturing Engineering",
    dataSteward: "Process Engineering Steward",
    solutionArchitect: "Manufacturing Architect",
    dataCustodian: "MES Platform Team",
    qaOwner: "Process QA Lead",
    reviewCadence: "Monthly",
    authoritativeSource: false,
    notes: "Routings and work instructions expanding to global plants",
    metadata: { roadmapPriority: "Q1 FY25" },
  },
  {
    capabilityKey: "capProductionPlanning",
    modelKey: "productionPlanningModel",
    domainKey: "operations",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 4,
    riskLevel: "medium",
    governanceOwner: "Director Integrated Planning",
    dataSteward: "Supply Planning Steward",
    solutionArchitect: "Enterprise Data Architect",
    dataCustodian: "Planning Analytics Ops",
    qaOwner: "Planning QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Feeds supply-demand reconciliation and executive S&OP",
    metadata: { roadmapPriority: "Q2 FY24", metrics: ["Plan Adherence"] },
  },
  {
    capabilityKey: "capManufacturingExecution",
    modelKey: "manufacturingExecutionModel",
    domainKey: "operations",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 3,
    riskLevel: "high",
    governanceOwner: "VP Manufacturing Operations",
    dataSteward: "MES Data Steward",
    solutionArchitect: "Shop Floor Architect",
    dataCustodian: "MES Control Center",
    qaOwner: "Manufacturing QA",
    reviewCadence: "Bi-Weekly",
    authoritativeSource: false,
    notes: "Telemetry streaming rollout underway for priority lines",
    metadata: { roadmapPriority: "Q3 FY24", operatingRegions: ["NA"] },
  },
  {
    capabilityKey: "capSupplyChainPlanning",
    modelKey: "supplyChainPlanningModel",
    domainKey: "operations",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "in_progress",
    alignmentRating: "medium",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Supply Chain Planning Lead",
    dataSteward: "Network Planning Steward",
    solutionArchitect: "Supply Chain Architect",
    dataCustodian: "APS Operations",
    qaOwner: "Supply Planning QA",
    reviewCadence: "Quarterly",
    authoritativeSource: false,
    notes: "Scenario planning being piloted with strategic suppliers",
    metadata: { roadmapPriority: "Q4 FY24" },
  },
  {
    capabilityKey: "capLogistics",
    modelKey: "logisticsVisibilityModel",
    domainKey: "inventory",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "in_progress",
    alignmentRating: "medium",
    businessValueScore: 4,
    readinessScore: 2,
    riskLevel: "medium",
    governanceOwner: "Logistics Director",
    dataSteward: "Transportation Data Steward",
    solutionArchitect: "Logistics Architect",
    dataCustodian: "WMS Operations",
    qaOwner: "Logistics QA",
    reviewCadence: "Monthly",
    authoritativeSource: false,
    notes: "Expanding visibility to third-party logistics partners",
    metadata: { roadmapPriority: "Q1 FY25" },
  },
  {
    capabilityKey: "capInventoryWarehouse",
    modelKey: "inventoryWarehouseModel",
    domainKey: "inventory",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 4,
    readinessScore: 4,
    riskLevel: "medium",
    governanceOwner: "Warehouse Excellence Manager",
    dataSteward: "Inventory Data Steward",
    solutionArchitect: "WMS Architect",
    dataCustodian: "Warehouse Operations",
    qaOwner: "Inventory QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Supports cycle counting and near-real-time availability",
    metadata: { roadmapPriority: "Q3 FY24" },
  },
  {
    capabilityKey: "capQualityManagement",
    modelKey: "qualityManagementModel",
    domainKey: "quality",
    lifecyclePhaseKey: "validate",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 4,
    riskLevel: "medium",
    governanceOwner: "Head of Quality",
    dataSteward: "Quality Data Steward",
    solutionArchitect: "Quality Architect",
    dataCustodian: "QMS Operations",
    qaOwner: "Quality Assurance",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Supports electronic batch records and SPC analytics",
    metadata: { roadmapPriority: "Q2 FY24", metrics: ["First Pass Yield"] },
  },
  {
    capabilityKey: "capMaintenanceAsset",
    modelKey: "assetMaintenanceModel",
    domainKey: "asset",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "active",
    alignmentRating: "medium",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Director Asset Reliability",
    dataSteward: "Maintenance Data Steward",
    solutionArchitect: "Asset Architect",
    dataCustodian: "Maintenance Operations",
    qaOwner: "Maintenance QA",
    reviewCadence: "Bi-Monthly",
    authoritativeSource: false,
    notes: "Predictive maintenance insights prioritized for critical equipment",
    metadata: { roadmapPriority: "Q2 FY25" },
  },
  {
    capabilityKey: "capIndustrialSafety",
    modelKey: "safetyIncidentModel",
    domainKey: "compliance",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "planned",
    alignmentRating: "medium",
    businessValueScore: 3,
    readinessScore: 2,
    riskLevel: "high",
    governanceOwner: "EHS Director",
    dataSteward: "Safety Data Steward",
    solutionArchitect: "Risk Architect",
    dataCustodian: "Compliance Operations",
    qaOwner: "Safety QA",
    reviewCadence: "Quarterly",
    authoritativeSource: false,
    notes: "Focus on standardizing incident taxonomy across sites",
  metadata: { roadmapPriority: "Q3 FY25" },
  },
  {
    capabilityKey: "capSustainabilityCompliance",
    modelKey: "sustainabilityReportingModel",
    domainKey: "compliance",
    lifecyclePhaseKey: "monitor",
    lifecycleStatus: "in_progress",
    alignmentRating: "high",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Chief Sustainability Officer",
    dataSteward: "ESG Data Steward",
    solutionArchitect: "Sustainability Architect",
    dataCustodian: "ESG Reporting Team",
    qaOwner: "Compliance QA",
    reviewCadence: "Quarterly",
    authoritativeSource: false,
    notes: "Preparing for new emissions disclosure mandates",
    metadata: { roadmapPriority: "Q1 FY25", metrics: ["CO2e"] },
  },
  {
    capabilityKey: "capProcurementSupplier",
    modelKey: "procurementModel",
    domainKey: "supplier",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "in_progress",
    alignmentRating: "medium",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Chief Procurement Officer",
    dataSteward: "Supplier Data Steward",
    solutionArchitect: "Source-to-Pay Architect",
    dataCustodian: "Procurement Ops",
    qaOwner: "Procurement QA",
    reviewCadence: "Quarterly",
    authoritativeSource: false,
    notes: "Extending contract analytics across strategic suppliers",
    metadata: { roadmapPriority: "Q3 FY24" },
  },
  {
    capabilityKey: "capSalesCustomer",
    modelKey: "salesCustomerModel",
    domainKey: "customer",
    lifecyclePhaseKey: "validate",
    lifecycleStatus: "active",
    alignmentRating: "medium",
    businessValueScore: 4,
    readinessScore: 4,
    riskLevel: "low",
    governanceOwner: "VP Commercial Operations",
    dataSteward: "Customer Data Steward",
    solutionArchitect: "CRM Architect",
    dataCustodian: "Commercial Analytics",
    qaOwner: "Sales QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Feeds order commitment and service responsiveness reporting",
    metadata: { roadmapPriority: "Q2 FY24" },
  },
  {
    capabilityKey: "capFinanceCosting",
    modelKey: "financeCostingModel",
    domainKey: "finance",
    lifecyclePhaseKey: "deploy",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 5,
    riskLevel: "low",
    governanceOwner: "Controller Manufacturing",
    dataSteward: "Cost Accounting Steward",
    solutionArchitect: "Finance Architect",
    dataCustodian: "Finance Operations",
    qaOwner: "Finance QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Drives margin and variance analytics",
    metadata: { roadmapPriority: "In Flight", primaryKPIs: ["Unit Cost"] },
  },
  {
    capabilityKey: "capWorkforceHr",
    modelKey: "workforceModel",
    domainKey: "hr",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "planned",
    alignmentRating: "medium",
    businessValueScore: 3,
    readinessScore: 2,
    riskLevel: "medium",
    governanceOwner: "HR Operations Director",
    dataSteward: "Workforce Data Steward",
    solutionArchitect: "HRIS Architect",
    dataCustodian: "People Operations",
    qaOwner: "HR Compliance",
    reviewCadence: "Quarterly",
    authoritativeSource: false,
    notes: "Targeting labor certification and overtime analytics",
    metadata: { roadmapPriority: "Q4 FY24" },
  },
  {
    capabilityKey: "capDataModelingArchitecture",
    modelKey: "enterpriseDataArchitecture",
    domainKey: "operations",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 4,
    riskLevel: "medium",
    governanceOwner: "Chief Data Architect",
    dataSteward: "Enterprise Data Steward",
    solutionArchitect: "Enterprise Architect",
    dataCustodian: "Data Platform Ops",
    qaOwner: "Architecture Review Board",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Baseline canonical patterns for manufacturing domains",
    metadata: { roadmapPriority: "In Flight" },
  },
  {
    capabilityKey: "capMasterDataManagement",
    modelKey: "masterDataHub",
    domainKey: "product",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "in_progress",
    alignmentRating: "high",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "MDM Director",
    dataSteward: "Master Data Steward",
    solutionArchitect: "MDM Architect",
    dataCustodian: "Master Data Operations",
    qaOwner: "Data Governance QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Deploying survivorship rules across product and supplier domains",
    metadata: { roadmapPriority: "Q1 FY25" },
  },
  {
    capabilityKey: "capMetadataGlossary",
    modelKey: "metadataCatalogModel",
    domainKey: "compliance",
    lifecyclePhaseKey: "deploy",
    lifecycleStatus: "active",
    alignmentRating: "medium",
    businessValueScore: 3,
    readinessScore: 4,
    riskLevel: "low",
    governanceOwner: "Data Governance Lead",
    dataSteward: "Glossary Steward",
    solutionArchitect: "Data Governance Architect",
    dataCustodian: "Governance Operations",
    qaOwner: "Governance QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Glossary adoption expanded to 80% of critical data elements",
    metadata: { roadmapPriority: "Q3 FY24" },
  },
  {
    capabilityKey: "capDataQualityGovernance",
    modelKey: "dataQualityModel",
    domainKey: "quality",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "in_progress",
    alignmentRating: "high",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Data Quality Lead",
    dataSteward: "DQ Rule Steward",
    solutionArchitect: "Data Governance Architect",
    dataCustodian: "Data Governance Ops",
    qaOwner: "Data Quality QA",
    reviewCadence: "Monthly",
    authoritativeSource: false,
    notes: "Rolling out scorecards for high-priority domains",
    metadata: { roadmapPriority: "Q2 FY25" },
  },
  {
    capabilityKey: "capAnalyticsAi",
    modelKey: "analyticsAiModel",
    domainKey: "operations",
    lifecyclePhaseKey: "monitor",
    lifecycleStatus: "active",
    alignmentRating: "high",
    businessValueScore: 5,
    readinessScore: 4,
    riskLevel: "medium",
    governanceOwner: "Head of Advanced Analytics",
    dataSteward: "Analytics Product Owner",
    solutionArchitect: "Analytics Architect",
    dataCustodian: "Analytics Engineering",
    qaOwner: "ModelOps QA",
    reviewCadence: "Monthly",
    authoritativeSource: true,
    notes: "Supports throughput and quality predictive models",
    metadata: { roadmapPriority: "In Flight", primaryKPIs: ["OEE", "Throughput"] },
  },
  {
    capabilityKey: "capIotEdgeData",
    modelKey: "iotEdgeModel",
    domainKey: "operations",
    lifecyclePhaseKey: "build",
    lifecycleStatus: "in_progress",
    alignmentRating: "medium",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Industrial IoT Lead",
    dataSteward: "Edge Data Steward",
    solutionArchitect: "IoT Architect",
    dataCustodian: "IoT Operations",
    qaOwner: "IoT QA",
    reviewCadence: "Bi-Weekly",
    authoritativeSource: false,
    notes: "Standardizing device twins and telemetry schemas",
    metadata: { roadmapPriority: "Q1 FY25" },
  },
  {
    capabilityKey: "capIntegrationApis",
    modelKey: "integrationApiModel",
    domainKey: "operations",
    lifecyclePhaseKey: "design",
    lifecycleStatus: "in_progress",
    alignmentRating: "medium",
    businessValueScore: 4,
    readinessScore: 3,
    riskLevel: "medium",
    governanceOwner: "Integration Services Lead",
    dataSteward: "API Product Owner",
    solutionArchitect: "Integration Architect",
    dataCustodian: "Integration Platform Ops",
    qaOwner: "API QA",
    reviewCadence: "Monthly",
    authoritativeSource: false,
    notes: "Building reusable manufacturing API catalog",
    metadata: { roadmapPriority: "Q4 FY24" },
  },
];

const capabilityModelSystemMappingsSeed: CapabilityModelSystemTrace[] = [
  {
    capabilityKey: "capProcurementDomain",
    modelKey: "procurementModel",
    systemKey: "erpCore",
    relationshipType: "governs",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 4,
    riskScore: 2,
    slaHours: 12,
    isPrimary: true,
  },
  {
    capabilityKey: "capHumanCapitalDomain",
    modelKey: "workforceModel",
    systemKey: "erpCore",
    relationshipType: "governs",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 3,
    riskScore: 3,
    slaHours: 16,
    isPrimary: true,
  },
  {
    capabilityKey: "capEngineeringDomain",
    modelKey: "manufacturingEngineeringModel",
    systemKey: "plmSuite",
    relationshipType: "authoritative",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 4,
    riskScore: 3,
    slaHours: 6,
    isPrimary: true,
  },
  {
    capabilityKey: "capMaintenanceDomain",
    modelKey: "assetMaintenanceModel",
    systemKey: "eamPlatform",
    relationshipType: "enables",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 3,
    riskScore: 3,
    slaHours: 24,
    isPrimary: true,
  },
  {
    capabilityKey: "capProductLifecycleManagement",
    modelKey: "productLifecycleModel",
    systemKey: "plmSuite",
    relationshipType: "authoritative",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 4,
    riskScore: 2,
    slaHours: 8,
    isPrimary: true,
  },
  {
    capabilityKey: "capManufacturingEngineering",
    modelKey: "manufacturingEngineeringModel",
    systemKey: "mesOrchestrator",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 4,
    riskScore: 3,
    slaHours: 4,
    isPrimary: true,
  },
  {
    capabilityKey: "capProductionPlanning",
    modelKey: "productionPlanningModel",
    systemKey: "erpCore",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 5,
    riskScore: 2,
    slaHours: 6,
    isPrimary: true,
  },
  {
    capabilityKey: "capManufacturingExecution",
    modelKey: "manufacturingExecutionModel",
    systemKey: "mesOrchestrator",
    relationshipType: "telemetry",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 5,
    riskScore: 4,
    slaHours: 2,
    isPrimary: true,
  },
  {
    capabilityKey: "capSupplyChainPlanning",
    modelKey: "supplyChainPlanningModel",
    systemKey: "scmAps",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 3,
    riskScore: 3,
    slaHours: 12,
    isPrimary: true,
  },
  {
    capabilityKey: "capLogistics",
    modelKey: "logisticsVisibilityModel",
    systemKey: "wmsHub",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 3,
    riskScore: 3,
    slaHours: 16,
    isPrimary: true,
  },
  {
    capabilityKey: "capInventoryWarehouse",
    modelKey: "inventoryWarehouseModel",
    systemKey: "wmsHub",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 4,
    riskScore: 2,
    slaHours: 8,
    isPrimary: true,
  },
  {
    capabilityKey: "capQualityManagement",
    modelKey: "qualityManagementModel",
    systemKey: "qmsCentral",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 4,
    riskScore: 2,
    slaHours: 6,
    isPrimary: true,
  },
  {
    capabilityKey: "capMaintenanceAsset",
    modelKey: "assetMaintenanceModel",
    systemKey: "eamPlatform",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 3,
    riskScore: 3,
    slaHours: 12,
    isPrimary: true,
  },
  {
    capabilityKey: "capIndustrialSafety",
    modelKey: "safetyIncidentModel",
    systemKey: "dataGovernance",
    relationshipType: "catalog",
    systemRole: "primary",
    lifecycleStatus: "planned",
    deploymentStatus: "planning",
    heatmapScore: 2,
    riskScore: 4,
    slaHours: 24,
    isPrimary: true,
  },
  {
    capabilityKey: "capSustainabilityCompliance",
    modelKey: "sustainabilityReportingModel",
    systemKey: "dataPlatform",
    relationshipType: "delivery",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 3,
    riskScore: 2,
    slaHours: 24,
    isPrimary: true,
  },
  {
    capabilityKey: "capProcurementSupplier",
    modelKey: "procurementModel",
    systemKey: "erpCore",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 3,
    riskScore: 3,
    slaHours: 16,
    isPrimary: true,
  },
  {
    capabilityKey: "capSalesCustomer",
    modelKey: "salesCustomerModel",
    systemKey: "crmFrontOffice",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 3,
    riskScore: 2,
    slaHours: 8,
    isPrimary: true,
  },
  {
    capabilityKey: "capFinanceCosting",
    modelKey: "financeCostingModel",
    systemKey: "erpCore",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 4,
    riskScore: 2,
    slaHours: 8,
    isPrimary: true,
  },
  {
    capabilityKey: "capWorkforceHr",
    modelKey: "workforceModel",
    systemKey: "erpCore",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "planned",
    deploymentStatus: "planning",
    heatmapScore: 2,
    riskScore: 3,
    slaHours: 24,
    isPrimary: true,
  },
  {
    capabilityKey: "capDataModelingArchitecture",
    modelKey: "enterpriseDataArchitecture",
    systemKey: "dataPlatform",
    relationshipType: "canonical",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 5,
    riskScore: 2,
    slaHours: 12,
    isPrimary: true,
  },
  {
    capabilityKey: "capMasterDataManagement",
    modelKey: "masterDataHub",
    systemKey: "dataGovernance",
    relationshipType: "authoritative",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 4,
    riskScore: 3,
    slaHours: 12,
    isPrimary: true,
  },
  {
    capabilityKey: "capMetadataGlossary",
    modelKey: "metadataCatalogModel",
    systemKey: "dataGovernance",
    relationshipType: "catalog",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 3,
    riskScore: 2,
    slaHours: 24,
    isPrimary: true,
  },
  {
    capabilityKey: "capDataQualityGovernance",
    modelKey: "dataQualityModel",
    systemKey: "dataGovernance",
    relationshipType: "monitor",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 4,
    riskScore: 3,
    slaHours: 12,
    isPrimary: true,
  },
  {
    capabilityKey: "capAnalyticsAi",
    modelKey: "analyticsAiModel",
    systemKey: "dataPlatform",
    relationshipType: "delivery",
    systemRole: "primary",
    lifecycleStatus: "active",
    deploymentStatus: "production",
    heatmapScore: 5,
    riskScore: 2,
    slaHours: 6,
    isPrimary: true,
  },
  {
    capabilityKey: "capIotEdgeData",
    modelKey: "iotEdgeModel",
    systemKey: "iotEdge",
    relationshipType: "ingest",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 4,
    riskScore: 3,
    slaHours: 4,
    isPrimary: true,
  },
  {
    capabilityKey: "capIntegrationApis",
    modelKey: "integrationApiModel",
    systemKey: "dataPlatform",
    relationshipType: "integration",
    systemRole: "primary",
    lifecycleStatus: "in_progress",
    deploymentStatus: "pilot",
    heatmapScore: 4,
    riskScore: 3,
    slaHours: 8,
    isPrimary: true,
  },
];

const modelLifecycleAssignmentsSeed: LifecycleAssignmentSeed[] = [
  {
    modelKey: "enterpriseManufacturingCanonical",
    phaseKey: "design",
    status: "completed",
    approvalStatus: "approved",
    completedAt: new Date("2024-01-10T00:00:00Z"),
    approvedBy: "Enterprise Data Council",
    nextReviewAt: new Date("2024-07-10T00:00:00Z"),
  },
  {
    modelKey: "enterpriseManufacturingCanonical",
    phaseKey: "build",
    status: "in_progress",
    approvalStatus: "pending",
    startedAt: new Date("2024-02-15T00:00:00Z"),
  },
  {
    modelKey: "productionPlanningModel",
    phaseKey: "design",
    status: "completed",
    approvalStatus: "approved",
    completedAt: new Date("2024-03-01T00:00:00Z"),
    approvedBy: "Planning Governance Board",
  },
  {
    modelKey: "manufacturingExecutionModel",
    phaseKey: "build",
    status: "in_progress",
    approvalStatus: "pending",
    startedAt: new Date("2024-03-20T00:00:00Z"),
  },
  {
    modelKey: "qualityManagementModel",
    phaseKey: "validate",
    status: "completed",
    approvalStatus: "approved",
    completedAt: new Date("2023-12-05T00:00:00Z"),
    approvedBy: "Quality Governance Board",
    nextReviewAt: new Date("2024-06-05T00:00:00Z"),
  },
  {
    modelKey: "masterDataHub",
    phaseKey: "build",
    status: "in_progress",
    approvalStatus: "pending",
    startedAt: new Date("2024-04-01T00:00:00Z"),
  },
  {
    modelKey: "analyticsAiModel",
    phaseKey: "monitor",
    status: "in_progress",
    approvalStatus: "approved",
    startedAt: new Date("2024-03-15T00:00:00Z"),
  },
  {
    modelKey: "iotEdgeModel",
    phaseKey: "build",
    status: "in_progress",
    approvalStatus: "pending",
    startedAt: new Date("2024-04-15T00:00:00Z"),
  },
  {
    modelKey: "integrationApiModel",
    phaseKey: "design",
    status: "planned",
    approvalStatus: "pending",
  },
];

function assertKeyedLookup<T>(map: Map<string, T | undefined>, key: string, entity: string): T {
  const value = map.get(key);
  if (!value) {
    throw new Error(`Unable to locate ${entity} with key "${key}" during seed import`);
  }
  return value;
}

export async function seedDatabase() {
  console.log("🌱 Starting database seeding...");

  try {
  await db.transaction(async (trx: typeof db) => {
      await trx.delete(configurations);
      await trx.delete(capabilityModelSystemMappings);
      await trx.delete(capabilityDataModelMappings);
      await trx.delete(capabilitySystemMappings);
      await trx.delete(capabilityDataAreaMappings);
      await trx.delete(capabilityDataDomainMappings);
      await trx.delete(modelLifecycleAssignments);
      await trx.delete(dataModelSystemMappings);
      await trx.delete(businessCapabilities);
      await trx.delete(modelLifecyclePhases);
    await trx.delete(dataModelAttributes);
    await trx.delete(dataModelProperties);
    await trx.delete(dataModelObjectRelationships);
    await trx.delete(dataObjectRelationships);
    await trx.delete(dataModelObjects);
    await trx.delete(attributes);
      await trx.delete(dataObjects);
      await trx.delete(dataModels);
      await trx.delete(dataAreas);
      await trx.delete(dataDomains);
      await trx.delete(systems);

      const insertedSystems = await trx
        .insert(systems)
        .values(systemsSeed.map(({ key: _key, ...values }) => values))
        .returning();
      const systemIdByKey = new Map<string, System["id"]>();
  insertedSystems.forEach((row: System, index: number) => {
        systemIdByKey.set(systemsSeed[index].key, row.id);
      });

      const insertedPhases = await trx.insert(modelLifecyclePhases).values(lifecyclePhasesSeed).returning();
      const phaseIdByKey = new Map<string, ModelLifecyclePhase["id"]>();
  insertedPhases.forEach((row: ModelLifecyclePhase, index: number) => {
        phaseIdByKey.set(lifecyclePhasesSeed[index].key, row.id);
      });

      const insertedDomains = await trx
        .insert(dataDomains)
        .values(dataDomainsSeed.map(({ key: _key, ...values }) => values))
        .returning();
      const domainIdByKey = new Map<string, DataDomain["id"]>();
  insertedDomains.forEach((row: DataDomain, index: number) => {
        domainIdByKey.set(dataDomainsSeed[index].key, row.id);
      });

      const areaIdByKey = new Map<string, DataArea["id"]>();
      if (dataAreasSeed.length > 0) {
        const insertedAreas = await trx
          .insert(dataAreas)
          .values(
            dataAreasSeed.map(({ key: _key, domainKey, ...values }) => ({
              ...values,
              domainId: assertKeyedLookup(domainIdByKey, domainKey, "data domain"),
            }))
          )
          .returning();
        insertedAreas.forEach((row: DataArea, index: number) => {
          areaIdByKey.set(dataAreasSeed[index].key, row.id);
        });
      }

      const modelIdByKey = new Map<string, DataModel["id"]>();
      for (const model of dataModelsSeed) {
        const { key, domainKey, areaKey, targetSystemKey, parentKey, ...values } = model;
        const [insertedModel] = await trx
          .insert(dataModels)
          .values({
            ...values,
            domainId: domainKey ? assertKeyedLookup(domainIdByKey, domainKey, "data domain") : null,
            dataAreaId: areaKey ? assertKeyedLookup(areaIdByKey, areaKey, "data area") : null,
            targetSystemId: targetSystemKey ? assertKeyedLookup(systemIdByKey, targetSystemKey, "system") : null,
            parentModelId: parentKey ? assertKeyedLookup(modelIdByKey, parentKey, "data model") : null,
          })
          .returning();
        modelIdByKey.set(key, insertedModel.id);
      }

      const insertedObjects = await trx
        .insert(dataObjects)
        .values(
          dataObjectsSeed.map(({ key: _key, modelKey, domainKey, areaKey, sourceSystemKey, targetSystemKey, ...values }) => ({
            ...values,
            modelId: assertKeyedLookup(modelIdByKey, modelKey, "data model"),
            domainId: domainKey ? assertKeyedLookup(domainIdByKey, domainKey, "data domain") : null,
            dataAreaId: areaKey ? assertKeyedLookup(areaIdByKey, areaKey, "data area") : null,
            sourceSystemId: sourceSystemKey ? assertKeyedLookup(systemIdByKey, sourceSystemKey, "system") : null,
            targetSystemId: targetSystemKey ? assertKeyedLookup(systemIdByKey, targetSystemKey, "system") : null,
          }))
        )
        .returning();
      const objectIdByKey = new Map<string, number>();
  insertedObjects.forEach((row: DataObject, index: number) => {
        objectIdByKey.set(dataObjectsSeed[index].key, row.id);
      });

      if (attributesSeed.length > 0) {
        await trx.insert(attributes).values(
          attributesSeed.map(({ key: _key, objectKey, ...values }) => ({
            ...values,
            objectId: assertKeyedLookup(objectIdByKey, objectKey, "data object"),
          }))
        );
      }

      const capabilityIdByKey = new Map<string, BusinessCapability["id"]>();
      for (const capability of capabilitiesSeed) {
        const { key, parentKey, ...values } = capability;
        const [insertedCapability] = await trx
          .insert(businessCapabilities)
          .values({
            ...values,
            parentId: parentKey ? assertKeyedLookup(capabilityIdByKey, parentKey, "business capability") : null,
          })
          .returning();
        capabilityIdByKey.set(key, insertedCapability.id);
      }

      if (capabilityDomainMappingsSeed.length > 0) {
        await trx.insert(capabilityDataDomainMappings).values(
          capabilityDomainMappingsSeed.map(({ capabilityKey, domainKey, ...values }) => ({
            ...values,
            capabilityId: assertKeyedLookup(capabilityIdByKey, capabilityKey, "business capability"),
            domainId: assertKeyedLookup(domainIdByKey, domainKey, "data domain"),
          }))
        );
      }

      if (capabilityAreaMappingsSeed.length > 0) {
        await trx.insert(capabilityDataAreaMappings).values(
          capabilityAreaMappingsSeed.map(({ capabilityKey, areaKey, ...values }) => ({
            ...values,
            capabilityId: assertKeyedLookup(capabilityIdByKey, capabilityKey, "business capability"),
            dataAreaId: assertKeyedLookup(areaIdByKey, areaKey, "data area"),
          }))
        );
      }

      if (capabilitySystemMappingsSeed.length > 0) {
        await trx.insert(capabilitySystemMappings).values(
          capabilitySystemMappingsSeed.map(({ capabilityKey, systemKey, ...values }) => ({
            ...values,
            capabilityId: assertKeyedLookup(capabilityIdByKey, capabilityKey, "business capability"),
            systemId: assertKeyedLookup(systemIdByKey, systemKey, "system"),
          }))
        );
      }

      if (dataModelSystemMappingsSeed.length > 0) {
        await trx.insert(dataModelSystemMappings).values(
          dataModelSystemMappingsSeed.map(({ modelKey, systemKey, ...values }) => ({
            ...values,
            modelId: assertKeyedLookup(modelIdByKey, modelKey, "data model"),
            systemId: assertKeyedLookup(systemIdByKey, systemKey, "system"),
          }))
        );
      }

      if (capabilityDataModelMappingsSeed.length > 0) {
        await trx.insert(capabilityDataModelMappings).values(
          capabilityDataModelMappingsSeed.map(({ capabilityKey, modelKey, domainKey, lifecyclePhaseKey, metadata, ...values }) => ({
            ...values,
            capabilityId: assertKeyedLookup(capabilityIdByKey, capabilityKey, "business capability"),
            modelId: assertKeyedLookup(modelIdByKey, modelKey, "data model"),
            domainId: domainKey ? assertKeyedLookup(domainIdByKey, domainKey, "data domain") : null,
            lifecyclePhaseId: lifecyclePhaseKey ? assertKeyedLookup(phaseIdByKey, lifecyclePhaseKey, "lifecycle phase") : null,
            metadata: metadata ?? null,
          }))
        );
      }

      if (capabilityModelSystemMappingsSeed.length > 0) {
        await trx.insert(capabilityModelSystemMappings).values(
          capabilityModelSystemMappingsSeed.map(({ capabilityKey, modelKey, systemKey, ...values }) => ({
            ...values,
            capabilityId: assertKeyedLookup(capabilityIdByKey, capabilityKey, "business capability"),
            modelId: assertKeyedLookup(modelIdByKey, modelKey, "data model"),
            systemId: assertKeyedLookup(systemIdByKey, systemKey, "system"),
          }))
        );
      }

      if (modelLifecycleAssignmentsSeed.length > 0) {
        await trx.insert(modelLifecycleAssignments).values(
          modelLifecycleAssignmentsSeed.map(({ modelKey, phaseKey, ...values }) => ({
            ...values,
            modelId: assertKeyedLookup(modelIdByKey, modelKey, "data model"),
            phaseId: assertKeyedLookup(phaseIdByKey, phaseKey, "lifecycle phase"),
          }))
        );
      }

      await trx.insert(configurations).values([
        {
          category: "governance",
          key: "manufacturing_bcm_framework",
          value: {
            name: "Manufacturing BCM 2025 Blueprint",
            version: "2025.1",
            lastUpdated: new Date().toISOString(),
            lifecyclePhases: lifecyclePhasesSeed.map((phase) => phase.key),
          },
          description: "Compact manufacturing BCM with explicit capability, domain, model, and system traceability",
        },
      ]);
    });

    console.log("✅ Database seeding complete.");
  } catch (error) {
    console.error("❌ Database seeding failed", error);
    throw error;
  }
}

if (import.meta.url === `file://${process.argv[1]}`) {
  seedDatabase()
    .then(() => process.exit(0))
    .catch(() => process.exit(1));
}